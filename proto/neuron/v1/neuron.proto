syntax = "proto3";

package neuron.v1;

import "google/protobuf/empty.proto";

message ListNeuronsResponse {
  // 利用可能なニューロン名の一覧
  repeated string neuron_name = 1;
}

message GetNeuronShapeRequest {
  // 取得したいニューロンの名前
  string neuron_name = 1;
}

message GetNeuronShapeResponse {
  // ニューロンの形状・空間情報
  repeated NeuronCompartment neuron_compartment = 1;
}

service NeuronService {
  // 利用可能なニューロン名の一覧を取得する
  rpc ListNeurons(google.protobuf.Empty) returns (ListNeuronsResponse);
  // ニューロンの形状・空間情報を取得する
  rpc GetNeuronShape(GetNeuronShapeRequest) returns (GetNeuronShapeResponse);
}

message NeuronCompartment {
  // （同一ニューロンで一意な）コンパートメントの id
  int64 id = 1;
  // コンパートメントの種類
  NeuronCompartmentType type = 2;
  // コンパートメントの x 座標の位置
  float position_x = 3;
  // コンパートメントの y 座標の位置
  float position_y = 4;
  // コンパートメントの z 座標の位置
  float position_z = 5;
  // コンパートメントの半径
  float radius = 6;
  // 親コンパートメントの id
  int64 parent_id = 7;
}

enum NeuronCompartmentType {
  // 未定義
  NEURON_COMPARTMENT_TYPE_UNSPECIFIED = 0;
  // 細胞体
  NEURON_COMPARTMENT_TYPE_SOMA = 1;
  // 軸索
  NEURON_COMPARTMENT_TYPE_AXON = 2;
  // 基底樹状突起
  NEURON_COMPARTMENT_TYPE_BASAL_DENDRITE = 3;
  // 尖端樹状突起
  NEURON_COMPARTMENT_TYPE_APICAL_DENDRITE = 4;
}
